openapi: 3.0.0
info:
  title: Property Search API
  description: API for searching properties with various filters
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Development server
tags:
  - name: Car search
    description: Operations related to property search
paths:
  /search/cars:
    post:
      tags:
        - Car search
      summary: Search cars with advanced filters
      description: Returns a list of cars matching the specified criteria
      operationId: searchCars
      parameters:
        - $ref: '#/components/parameters/acceptLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarSearchRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarSearchResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

components:
  schemas:
    CarSearchRequest:
      type: object
      properties:
        listing_type:
          type: string
          enum: [sale, rent]
          description: Type of listing (sale/rent)
        seller_type:
          type: string
          enum: [owner, broker]
          description: Type of seller (owner/broker)
        car_type_id:
          type: integer
          description: ID of car type
        min_price:
          type: number
          description: Minimum price
        max_price:
          type: number
          description: Maximum price
        location:
          type: string
          description: Location search string
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeFilter'
          description: Array of attribute filters
        specifications:
          type: array
          items:
            type: integer
          description: Array of specification IDs to filter by (true values only)
        page:
          type: integer
          default: 1
          description: Page number
        limit:
          type: integer
          default: 20
          description: Number of items per page
        sort_by:
          type: string
          default: created_at
          description: Field to sort by
        sort_order:
          type: string
          enum: [ASC, DESC]
          default: DESC
          description: Sort order

    CarSearchResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Car'
        message:
          type: string
          description: Response message
        pagination:
          $ref: '#/components/schemas/Pagination'

    Car:
      type: object
      properties:
        id:
          type: integer
        title_ar:
          type: string
        title_en:
          type: string
        desc_ar:
          type: string
        desc_en:
          type: string
        images:
          type: array
          items:
            type: string
        location:
          type: string
        lat:
          type: number
        long:
          type: number
        isActive:
          type: boolean
        price:
          type: number
        listing_type:
          type: string
          enum: [sale, rent]
        seller_type:
          type: string
          enum: [owner, broker]
        created_at:
          type: string
          format: date-time
        car_type:
          $ref: '#/components/schemas/CarType'
        user:
          $ref: '#/components/schemas/User'

    CarType:
      type: object
      properties:
        id:
          type: integer
        name_ar:
          type: string
        name_en:
          type: string