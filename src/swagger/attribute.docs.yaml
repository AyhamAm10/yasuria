openapi: 3.0.0
info:
  title: Attribute API
  description: API for managing attributes with nested dropdown support
  version: 1.0.0

paths:
  /attributes:
    get:
      summary: Retrieve a list of attributes
      description: |
        Fetches a list of attributes with support for filtering by:
        - entityType (car/property)
        - purpose (sale/rent/both)
        - show_in_search (boolean)
        - car_type_id (integer)
        - property_type_id (integer)
      tags:
        - attribute
      parameters:
        - name: entityType
          in: query
          description: Filter by entity type (car/property)
          required: false
          schema:
            $ref: '#/components/schemas/EntityAttribute'
        - name: purpose
          in: query
          description: Filter by attribute purpose (sale/rent/both)
          required: false
          schema:
            $ref: '#/components/schemas/AttributeFor'
        - name: showInSearch
          in: query
          description: Filter by visibility in search (true/false)
          required: false
          schema:
            type: boolean
        - name: carTypeId
          in: query
          description: Filter by car type ID
          required: false
          schema:
            type: integer
        - name: propertyTypeId
          in: query
          description: Filter by property type ID
          required: false
          schema:
            type: integer
        - name: accept-language
          in: header
          description: Language preference (ar/en)
          required: false
          schema:
            type: string
            enum: [ar, en]
            default: ar
      responses:
        200:
          description: Attributes retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: No attributes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

    post:
      summary: Create a new attribute
      description: |
        Create attribute with support for:
        - Text input
        - Dropdown
        - Nested dropdown
        - Purpose (sale/rent/both)
        - Search visibility
        - Association with car type or property type
      tags:
        - attribute
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - input_type
                - entity
              properties:
                title:
                  type: string
                  example: "Engine Size"
                input_type:
                  type: string
                  enum: [text, dropdown, nested_dropdown]
                  example: "dropdown"
                entity:
                  $ref: '#/components/schemas/EntityAttribute'
                parent_id:
                  type: integer
                  nullable: true
                  example: 1
                parent_value:
                  type: string
                  nullable: true
                  example: "Sedan"
                options:
                  type: string
                  description: JSON string of options array
                  example: '[{"value":"1.6","label":"1.6L"},{"value":"2.0","label":"2.0L"}]'
                has_child:
                  type: boolean
                  default: false
                show_in_search:
                  type: boolean
                  default: true
                purpose:
                  $ref: '#/components/schemas/AttributeFor'
                car_type_id:
                  type: integer
                  nullable: true
                  example: 1
                property_type_id:
                  type: integer
                  nullable: true
                  example: 2
                icon:
                  type: string
                  format: binary
                  nullable: true
      responses:
        201:
          description: Attribute created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        400:
          description: Missing required fields or validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /attributes/{id}:
    get:
      summary: Get an attribute by ID
      description: Get attribute details including related values
      tags:
        - attribute
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: accept-language
          in: header
          description: Language preference (ar/en)
          required: false
          schema:
            type: string
            enum: [ar, en]
            default: ar
      responses:
        200:
          description: Attribute retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

    put:
      summary: Update an existing attribute
      description: Update attribute including nested relationships
      tags:
        - attribute
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: accept-language
          in: header
          description: Language preference (ar/en)
          required: false
          schema:
            type: string
            enum: [ar, en]
            default: ar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  nullable: true
                input_type:
                  type: string
                  enum: [text, dropdown, nested_dropdown]
                  nullable: true
                entity:
                  $ref: '#/components/schemas/EntityAttribute'
                  nullable: true
                parent_id:
                  type: integer
                  nullable: true
                parent_value:
                  type: string
                  nullable: true
                options:
                  type: string
                  description: JSON string of options array
                  nullable: true
                show_in_search:
                  type: boolean
                  nullable: true
                purpose:
                  $ref: '#/components/schemas/AttributeFor'
                  nullable: true
                car_type_id:
                  type: integer
                  nullable: true
                property_type_id:
                  type: integer
                  nullable: true
                icon:
                  type: string
                  format: binary
                  nullable: true
      responses:
        200:
          description: Attribute updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

    delete:
      summary: Delete an attribute
      description: Delete attribute and its related values
      tags:
        - attribute
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: accept-language
          in: header
          description: Language preference (ar/en)
          required: false
          schema:
            type: string
            enum: [ar, en]
            default: ar
      responses:
        200:
          description: Attribute deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: Attribute not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

  /attributes/child/{id}:
    get:
      summary: Get child attributes
      description: Get child attributes for a specific parent attribute and value
      tags:
        - attribute
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: accept-language
          in: header
          description: Language preference (ar/en)
          required: false
          schema:
            type: string
            enum: [ar, en]
            default: ar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - value
              properties:
                value:
                  type: string
                  description: The parent attribute value to filter by
      responses:
        200:
          description: Child attributes retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        404:
          description: No child attributes found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'

components:
  schemas:
    EntityAttribute:
      type: string
      enum: [car, property]
      example: car

    AttributeFor:
      type: string
      enum: [sale, rent, both]
      default: both
      example: both

    Attribute:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Engine Size"
        input_type:
          type: string
          enum: [text, dropdown, nested_dropdown]
          example: "dropdown"
        entity:
          $ref: '#/components/schemas/EntityAttribute'
        icon:
          type: string
          nullable: true
          example: "engine-icon.png"
        show_in_search:
          type: boolean
          default: false
          example: true
        purpose:
          $ref: '#/components/schemas/AttributeFor'
        has_child:
          type: boolean
          default: false
          example: false
        parent_id:
          type: integer
          nullable: true
          example: 1
        parent_value:
          type: string
          nullable: true
          example: "Sedan"
        options:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              label:
                type: string
          nullable: true
        car_type:
          $ref: '#/components/schemas/CarType'
          nullable: true
        property_type:
          $ref: '#/components/schemas/PropertyType'
          nullable: true
        created_at:
          type: string
          format: date-time
        values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
          nullable: true

    CarType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time

    PropertyType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time

    AttributeValue:
      type: object
      properties:
        id:
          type: integer
        value:
          type: string
        attribute_id:
          type: integer
        created_at:
          type: string
          format: date-time

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation completed successfully"
        data:
          oneOf:
            - $ref: '#/components/schemas/Attribute'
            - type: array
              items:
                $ref: '#/components/schemas/Attribute'
            - type: null

    APIError:
      type: object
      properties:
        statusCode:
          type: integer
          example: 404
        message:
          type: string
          example: "Attribute not found"
        errors:
          type: array
          items:
            type: string
          nullable: true